#+TITLE:  SuperNEMO control plot module
#+AUTHOR: Xavier Garrido
#+DATE:   2014-05-23
#+OPTIONS: ^:{} num:nil toc:nil
# #+STARTUP: entitiespretty

This repository holds a SN@ilWare configuration to run SuperNEMO simulations and
to produce several "control" plots. It provides one SN@ilWare module which
automatically plot physical quantities from different data banks. For example,
it shows the distribution of the number of Geiger hits from the =simulated_data=
bank and from the =calibrated_data= bank. The purpose of this module is to have
some fundamental key plots to check differences between software releases, new
software implementations and so on.

The current version is hosted at
[[https://github.com/xgarrido/snemo_simulation_modules/snemo_control_plot]] under
=git= version control.

The code itself is implemented in the =source= directory which holds the
=snemo_control_plot_module.*= source code as well as a =CMakeLists.txt=
file in order to compile, build and install the module following =cmake= rules.

* Module declaration

The next item holds the configuration of the module. The second item is related
to histogram declarations.

** Module declaration
:PROPERTIES:
:MKDIRP: yes
:TANGLE: ../config/snemo_control_plot_module.conf
:END:

The module name to be used when processing a file is =scp_module=.

*** File preamble
#+BEGIN_SRC shell
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
*** Declaration & description
#+BEGIN_SRC shell
  [name="snemo_control_plot" type="snemo::analysis::snemo_control_plot_module"]

  #@description A SuperNEMO module to plot key quantities from data banks
#+END_SRC

*** Logging priority
#+BEGIN_SRC shell
  #@description Logging priority
  logging.priority : string = "warning"
#+END_SRC

*** Histogram service label
Set the same histogram service label as defined [[Histogram declarations][here]]
#+BEGIN_SRC shell
  #@description The Histogram Service label
  Histo_label : string = "Histo"
#+END_SRC
*** Histogram storage
All histograms generated by =snemo_control_plot= module can be stored inside
ROOT files or XML archives.
#+BEGIN_SRC shell
  #@description The ouput file where to store the histograms
  Histo.output_files : string[2] as path =                  \
      "/tmp/${USER}/snemo.d/snemo_control_plot_histos.root" \
      "/tmp/${USER}/snemo.d/snemo_control_plot_histos.xml"
#+END_SRC
*** Histogram templates
Templates for histogram may be provided to reduce the amount of configuration of
individual histogram. For instance, plotting the energy distributions of several
channels may only need one general histogram definition which gives the x-axis
boundaries and x-binning.
#+BEGIN_SRC shell
  #@description The ouput file where to store the histograms
  Histo.template_files : string[1] as path = \
      "@SNEMO_ANALYSIS_MODULES_DIR@/snemo_control_plot_histogram_templates.conf"
#+END_SRC

*** Plotter declarations
#+BEGIN_SRC shell
  plotters : string[5] = "SDP" "CDP" "TCDP" "TTDP" "TDP"
#+END_SRC
**** Simulated data plotter
#+BEGIN_SRC shell
  #@description Logging flag
  SDP.logging.priority : string = "error"
#+END_SRC

**** Tracker trajectory data plotter
#+BEGIN_SRC shell
  #@description Logging flag
  TTDP.logging.priority : string = "error"
#+END_SRC

** Histogram declarations
:PROPERTIES:
:MKDIRP: yes
:TANGLE: ../config/snemo_control_plot_histogram_templates.conf
:END:

The histogram declarations /i.e./ name, boundaries, binning... are set in this
section which is organized by data bank related plots. There are two kinds of
histograms:
- /unique/ histogram, dedicated to one task and used only one time,
- /template/ histogram which may be used by several data bank.
For example, to plot the distribution of the number of Geiger hits which can be
done for =simulated_data= and =calibrated_data= banks, we use *one* histogram
template that define boundaries, binning, axis titles... The /template/
histograms all belong to the =__template= group.

*** Mandatory preamble
#+BEGIN_SRC shell
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

*** Skeleton codes                                               :noexport:
:PROPERTIES:
:TANGLE: no
:RESULTS: output
:END:
This section declare some skeleton code to ease the creation of histograms.
**** Setting name, type, group and mode
Declaring histogram name, histogram type /i.e./ =mygsl::histogram_1d= or
=mygsl::histogram_2d=, histogram group and finally histogram mode that can be
either regular, table or mimic.
#+NAME: set_name
#+HEADERS: :var name="" :var type="mygsl::histogram_1d" :var group="" :var mode="regular"
#+HEADERS: :var table="" :var mimic=""
#+BEGIN_SRC shell
  echo '[name="'$name'" type="'$type'"]'
  echo
  echo '#@config The group of the histogram'
  echo 'group : string = "'$group'"'
  echo
  echo '#@description The build mode'
  echo 'mode : string = "'$mode'"'
  if [[ $mode == "mimic" ]]; then
      echo
      echo '#@description Histogram name to be mimic'
      if [[ $type == "mygsl::histogram_1d" ]]; then
          echo 'mimic.histogram_1d : string = "'$mimic'"'
      elif [[ $type == "mygsl::histogram_2d" ]]; then
          echo 'mimic.histogram_2d : string = "'$mimic'"'
      fi
  fi
#+END_SRC

**** Setting axis binning
This part allows to declare the axis binning, min/max values, linear/logarithmic
mode and finally the axis unit.

#+TBLNAME: units
|--------+--------|
| eV     | energy |
| degree | angle  |
| s      | time   |
| m      | length |
|--------+--------|

#+NAME: set_binning
#+HEADERS: :var arr=units :var unit=""
#+HEADERS: :var mode="linear" :var nbins="" :var min="" :var max=""
#+BEGIN_SRC shell
  echo '#@description The '$mode' mode'
  echo $mode' : boolean = 1'
  echo
  echo '#@decription The number of bins'
  echo 'number_of_bins : integer = '$nbins
  echo
  local -A units=(${=arr})
  local found=false
  for u in "${(@k)units}"; do
      if [[  $unit =~ $u ]]; then
          echo '#@description The unit of the bins bounds'
          echo 'unit : string = "'$unit'"'
          echo
          echo '#@description The lower bound of the histogram'
          echo 'min : real as '${units[$u]}' = '$min
          echo
          echo '#@description The upper bound of the histogram'
          echo 'max : real as '${units[$u]}' = '$max
          found=true
          break
      fi
  done
  if ! $found; then
      echo '#@description The lower bound of the histogram'
      echo 'min : real = '$min
      echo
      echo '#@description The upper bound of the histogram'
      echo 'max : real = '$max
  fi
#+END_SRC

**** Setting axis labels and histogram title
Setting axis labels and histogram title.

#+NAME: set_label
#+HEADERS: :var title="" :var xlabel="" :var ylabel=""
#+BEGIN_SRC shell
  if [ ! -z $title ]; then
      echo '#@description The title of the histogram'
      printf 'title : string = "%s"\n\n' "$title"
  fi
  if [ ! -z $xlabel ]; then
      echo '#@description The X axis label'
      printf 'display.xaxis.label : string = "%s"\n\n' "$xlabel"
  fi
  if [ ! -z $ylabel ]; then
      echo '#@description The Y axis label'
      printf 'display.yaxis.label : string = "%s"\n' "$ylabel"
  fi
#+END_SRC
*** Simulated data bank histograms
**** Number of Geiger hits
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="SD::ngghits", group="SD")>>
  <<set_binning(nbins=50, min=-0.5, max=99.5)>>
  <<set_label(title="Number of simulated tracker hits", xlabel="$N_\\text{sim.}$ (tracker)", ylabel="Counts")>>
#+END_SRC

**** Number of calorimeter hits
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="SD::ncalohits", group="SD")>>
  <<set_binning(nbins=10, min=-0.5, max=9.5)>>
  <<set_label(title="Number of simulated calorimeter hits", xlabel="$N_\\text{sim.}$ (calorimeter)", ylabel="Counts")>>
#+END_SRC

*** Calibrated data bank histograms
**** Number of calibrated tracker hits
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="CD::ngghits", group="CD")>>
  <<set_binning(nbins=25, min=-0.5, max=99.5)>>
  <<set_label(title="Number of calibrated tracker hits", xlabel="$N_\\text{calib.}$ (tracker)", ylabel="Counts")>>
#+END_SRC

**** Number of calibrated calorimeter hits
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="CD::ncalohits", group="CD")>>
  <<set_binning(nbins=10, min=-0.5, max=9.5)>>
  <<set_label(title="Number of calibrated tracker hits", xlabel="$N_\\text{calib.}$ (calorimeter)", ylabel="Counts")>>
#+END_SRC

**** Distribution of drift radius
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="CD::drift_radius", group="CD")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="25 mm")>>
  <<set_label(title="Distribution of Geiger drift distance error", xlabel="$r_\\text{calib.}$ (tracker)", ylabel="Counts")>>
#+END_SRC

**** Distribution of drift radius error
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="CD::drift_radius_error", group="CD")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="1 mm")>>
  <<set_label(title="Distribution of Geiger drift distance", xlabel="$\\sigma_{r_\\text{calib.}}$ (tracker)", ylabel="Counts")>>
#+END_SRC

**** Distribution of longitudinal position
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="CD::long_position", group="CD")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="1.5 m")>>
  <<set_label(title="Distribution of Geiger longitudinal position", xlabel="$z_\\text{calib.}$ (tracker)", ylabel="Counts")>>
#+END_SRC

**** Distribution of longitudinal position error
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="CD::long_position_error", group="CD")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="100 mm")>>
  <<set_label(title="Distribution of Geiger longitudinal position error", xlabel="$\\sigma_{z_\\text{calib.}}$ (tracker)", ylabel="Counts")>>
#+END_SRC

*** Tracker clustering data bank histograms
**** Number of clusters
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TCD::nclusters", group="TCD")>>
  <<set_binning(nbins=10, min=-0.5, max=9.5)>>
  <<set_label(title="Distribution of number of clusters", xlabel="$N_\\text{cluster}$", ylabel="Counts")>>
#+END_SRC

*** Tracker trajectory data bank histograms
**** Helix radius
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TTD::helix_radius", group="TTD")>>
  <<set_binning(nbins=100, unit="m", min="0 m", max="3 m")>>
  <<set_label(title="Distribution of helix trajectory radius", xlabel="$r_\\text{helix}$", ylabel="Counts")>>
#+END_SRC

*** Topology data bank histograms
**** 1e plots
***** Electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e::electron_energy", group="TD/1e")>>
  <<set_binning(nbins=100, unit="keV", min="0 keV", max="4 MeV")>>
  <<set_label(title="Distribution of electron energy", xlabel="electron energy", ylabel="Counts")>>
#+END_SRC

***** Electron track length
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e::electron_track_length", group="TD/1e")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="3 m")>>
  <<set_label(title="Distribution of electron track length", xlabel="electron track length", ylabel="Counts")>>
#+END_SRC

***** Angle between electron and the $x$ axis
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e::electron_angle", group="TD/1e")>>
  <<set_binning(nbins=100, unit="degree", min="0 degree", max="180 degree")>>
  <<set_label(title="Distribution of angle between electron and the $x$ axis", xlabel="$\\theta$ angle", ylabel="Counts")>>
#+END_SRC

**** 1e1\alpha plots
***** Electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1a::electron_energy", group="TD/1e1a")>>
  <<set_binning(nbins=100, unit="keV", min="0 keV", max="4 MeV")>>
  <<set_label(title="Distribution of electron energy", xlabel="electron energy", ylabel="Counts")>>
#+END_SRC

***** Electron track length
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1a::electron_track_length", group="TD/1e1a")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="3 m")>>
  <<set_label(title="Distribution of electron track length", xlabel="electron track length", ylabel="Counts")>>
#+END_SRC

***** Angle between electron and the $x$ axis
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1a::electron_angle", group="TD/1e1a")>>
  <<set_binning(nbins=100, unit="degree", min="0 degree", max="180 degree")>>
  <<set_label(title="Distribution of angle between electron and the $x$ axis", xlabel="$\\theta$ angle", ylabel="Counts")>>
#+END_SRC

***** Alpha delayed time
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1a::alpha_delay_time", group="TD/1e1a")>>
  <<set_binning(nbins=100, unit="us", min="0 us", max="1 ms")>>
  <<set_label(title="Distribution of alpha delay time", xlabel="$\\alpha$ delay time", ylabel="Counts")>>
#+END_SRC

***** Alpha track length
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1a::alpha_track_length", group="TD/1e1a")>>
  <<set_binning(nbins=100, unit="mm", min="0 mm", max="400 mm")>>
  <<set_label(title="Distribution of alpha track length", xlabel="$\\alpha$ track length", ylabel="Counts")>>
#+END_SRC

**** 1e1\gamma plots
***** Electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1g::electron_energy", group="TD/1e1g", mode="mimic", mimic="TD::1e::electron_energy")>>
#+END_SRC

***** Electron track length
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1g::electron_track_length", group="TD/1e1g", mode="mimic", mimic="TD::1e::electron_track_length")>>
#+END_SRC

***** Angle between electron and the $x$ axis
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e1g::electron_angle", group="TD/1e1g", mode="mimic", mimic="TD::1e::electron_angle")>>
#+END_SRC

**** 1e2\gamma plots
***** Electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e2g::electron_energy", group="TD/1e2g", mode="mimic", mimic="TD::1e::electron_energy")>>
#+END_SRC

***** Electron track length
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e2g::electron_track_length", group="TD/1e2g", mode="mimic", mimic="TD::1e::electron_track_length")>>
#+END_SRC

***** Angle between electron and the $x$ axis
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::1e2g::electron_angle", group="TD/1e2g", mode="mimic", mimic="TD::1e::electron_angle")>>
#+END_SRC

**** 2e plots
***** Minimal electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::2e::minimal_energy", group="TD/2e")>>
  <<set_binning(nbins=100, unit="keV", min="0 keV", max="4 MeV")>>
  <<set_label(title="Distribution of electrons minimal energy", xlabel="electron minimal energy", ylabel="Counts")>>
#+END_SRC

***** Maximal electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::2e::maximal_energy", group="TD/2e")>>
  <<set_binning(nbins=100, unit="keV", min="0 keV", max="4 MeV")>>
  <<set_label(title="Distribution of electrons maximal energy", xlabel="electron maximal energy", ylabel="Counts")>>
#+END_SRC

***** Total electron energy
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::2e::total_energy", group="TD/2e")>>
  <<set_binning(nbins=100, unit="keV", min="0 keV", max="4 MeV")>>
  <<set_label(title="Distribution of electrons total energy", xlabel="electron total energy", ylabel="Counts")>>
#+END_SRC

***** Angle between electrons
#+BEGIN_SRC shell :noweb yes
  <<set_name(name="TD::2e::angle", group="TD/2e")>>
  <<set_binning(nbins=100, unit="degree", min="0 degree", max="180 degree")>>
  <<set_label(title="Distribution of angle between electrons", xlabel="$\\theta$ angle", ylabel="Counts")>>
#+END_SRC
