#+TITLE:  SuperNEMO - \beta\beta studies
#+AUTHOR: Xavier Garrido
#+DATE:   2014-05-23
#+OPTIONS: ^:{} num:nil toc:nil
#+STARTUP: entitiespretty

This repository holds a SN@ilWare configuration + source code to calculate \beta\beta0\nu
sensitivity for SuperNEMO experiment. Given 2\beta simulations (maybe data one day)
from 0\nu double decay and background simulations (2\nu,\nbsp^{208}Tl,\nbsp^{214}Bi...), the
module =snemo_bb0nu_halflife_limit_module= calculates signal/background
efficiencies and then determines the best sensitivity.

The current version is hosted at
[[https://github.com/xgarrido/snemo_simulation_modules/snemo_bb0nu_studies]] under
=git= version control.

The code itself is implemented in the =source= directory which holds the
=snemo_bb0nu_halflife_limit_module.*= source code as well as a =CMakeLists.txt=
file in order to compile, build and install the module following =cmake= rules.

* SuperNEMO \beta\beta0\nu module declaration
:PROPERTIES:
:MKDIRP: yes
:END:

The next item holds the configuration for the SuperNEMO \beta\beta modules. The
second item is related to histogram declarations.

** Module declaration
:PROPERTIES:
:TANGLE: ../config/snemo_bb0nu_studies_module.conf
:END:

The module name is =bb0nu_halflife_limit_module= which is needed when using
=bxdpp_processing= as explained in the top [[../README.org][README]] file.

*** File preamble
#+BEGIN_SRC sh
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
*** Declaration & description
#+BEGIN_SRC sh
  [name="bb0nu_halflife_limit_module" type="analysis::snemo_bb0nu_halflife_limit_module"]

  #@description A SuperNEMO module to calculate the 0nu sensitivity
#+END_SRC

*** Logging priority
#+BEGIN_SRC sh
  #@description Logging priority
  logging.priority : string = "notice"
#+END_SRC

*** Histogram service label
Set the same histogram service label as defined [[file:../README.org::*Histogram service][here]]
#+BEGIN_SRC sh
  #@description The Histogram Service label
  Histo_label : string = "Histo"
#+END_SRC
*** Histogram storage
All histograms generated by =snemo_bb0nu_studies= module can be stored inside
ROOT files or XML archives.
#+BEGIN_SRC sh
  #@description The ouput file where to store the histograms
  Histo_output_files : string[2] as path =                          \
      "/tmp/${USER}/snemo.d/snemo_bb0nu_halflife_limit_histos.root" \
      "/tmp/${USER}/snemo.d/snemo_bb0nu_halflife_limit_histos.xml"
#+END_SRC

Histograms done from a previous run of the module can be load at startup. This
is useful when processing a huge collection of files has been done and energy
distribution as well as efficiency have been computed : then the output
histograms can be set as new input for the =histogram_service= in such way, the
processing does not to be redo for these peculiar files.
#+BEGIN_SRC sh
  #@description The input file from where to load the histograms
  Histo_input_file : string as path = \
      "/tmp/${USER}/snemo.d/snemo_bb0nu_halflife_limit_histos.saved.xml"
#+END_SRC

*** Histogram templates
Templates for histogram may be provided to reduce the amount of configuration of
individual histogram. For instance, plotting the energy distributions of several
channels may only need one general histogram definition which gives the x-axis
boundaries and x-binning (see [[Histogram declarations][below]]).
#+BEGIN_SRC sh
  #@description The ouput file where to store the histograms
  Histo_template_files : string[1] as path = \
      "@SNEMO_SIMULATION_MODULES_DIR@/snemo_bb0nu_histogram_templates.conf"
#+END_SRC
*** Building histogram keys
The key fields are used to build different identifiants for histogram
dictionnary. The basic idea is to have this information inside =event_header=
and use it to build a =string= key. The program is then quite dynamic in the
sense that 0\nu halflife calculation can be done for different study purpose (just
change the =key_fields=).
#+BEGIN_SRC sh
  #@description The key fields from 'Event Header' bank to build a unique key for histogram
  key_fields : string[1] = \
      "event.genbb_label"
#+END_SRC

*** Experimental setup
Here we define the experimental conditions basically which isotope, mass, 2\beta
halflife, exposure are used.

**** Isotope values
#+BEGIN_SRC sh
  #@description The atomic mass number of the isotope
  experiment.isotope_mass_number : real = 82

  #@description The total mass of the isotope
  experiment.isotope_mass : real as mass = 7 kg

  #@description The bb2nu halflife of the isotope
  experiment.isotope_bb2nu_halflife : real = 9.0e19 #year
#+END_SRC

**** Experiment exposure
#+BEGIN_SRC sh
  #@description The exposure time of the experiment
  experiment.exposure_time : real = 2.5 #year
#+END_SRC

**** Tracking chamber volume
#+BEGIN_SRC sh
  #@description The total gas volume of the tracking chamber
  experiment.tracker_volume : real as volume = 15.2 m3
#+END_SRC

**** Background activities
#+BEGIN_SRC sh
  #@description The list of background element
  experiment.background_list : string[3] = "Tl208" "Bi214" "Rn222"
#+END_SRC

***** \nbsp^{208}Tl activity
#+BEGIN_SRC sh
  #@description The mass activity for internal Thallium-208 contamination
  experiment.Tl208.mass_activity : real as mass_activity = 2 uBq/kg
#+END_SRC
***** \nbsp^{214}Bi activity
#+BEGIN_SRC sh
  #@description The mass activity for internal Bismuth-214 contamination
  experiment.Bi214.mass_activity : real as mass_activity = 10 uBq/kg
#+END_SRC
***** \nbsp^{222}Rn activity
#+BEGIN_SRC sh
  #@description The volume activity for Radon inside tracking chamber
  experiment.Rn222.volume_activity : real as volume_activity = 100 uBq/m3
#+END_SRC
** Histogram declarations
:PROPERTIES:
:TANGLE: ../config/snemo_bb0nu_histogram_templates.conf
:END:

The histogram declarations /i.e./ name, boundaries, binning... are set in this
section. There are mostly /template/ histogram in such way, their declarations
may be used as templates for several histograms. For instance, the [[Energy
template]] defines an histogram that can be mimic by different analysis channels
/i.e./ 0\nu energy distribution to background energy distribution. Table [[hbin]]
defines the number of bins, the minimal energy and the maximal energy to compute
neutrinoless double bet decay sensitivity.

#+CAPTION: *Histogram binning values.*
#+NAME: hbin
|----------------+------------|
| Number of bins | 25         |
| Minimal energy | 2000.0 keV |
| Maximal energy | 3200.0 keV |
|----------------+------------|

*** Retrieve binning information                                   :noexport:
#+NAME: get_binning_info
#+HEADERS: :var bin=hbin[1,1] :var min=hbin[2,1] :var max=hbin[3,1] :var info="bin"
#+BEGIN_SRC sh :tangle no :results output
    if [ ${info} == "bin" ]; then
        echo -ne "${bin}"
    elif [ ${info} == "min" ]; then
        echo -ne "${min}"
    elif [ ${info} == "max" ]; then
        echo -ne "${max}"
    fi
#+END_SRC
*** Mandatory preamble
#+BEGIN_SRC sh
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

*** Energy template
#+BEGIN_SRC sh :noweb yes
  [name="energy_template" type="mygsl::histogram_1d"]
  #@config The histogram template of the energy distribution

  #@description The group of the histogram (optional)
  group : string = "__template"

  #@description The build mode (default : "regular", "table", "mimic");
  mode : string = "regular"

  #@description The linear mode (default)
  linear : boolean = 1

  #@description The X axis label
  display.xaxis.label : string = "\Upsigma_\text{\tiny 1,2}$E$_\text{calibrated}"

  #@description The Y axis label
  display.yaxis.label : string = "dN/dE [A.U.]"

  #@description The number of bins
  number_of_bins : integer = <<get_binning_info(info="bin")>>

  #@description The unit of the bins' bounds (a standard unit, typically SI or CLHEP)
  unit : string = "keV"

  #@description The lower bound of the histogram
  min : real as energy = <<get_binning_info(info="min")>>

  #@description The upper bound of the histogram
  max : real as energy = <<get_binning_info(info="max")>>
#+END_SRC
*** Efficiency template
#+BEGIN_SRC sh :noweb yes
  [name="efficiency_template" type="mygsl::histogram_1d"]
  #@config The histogram template of the energy selection efficiency

  #@description The group of the histogram (optional)
  group : string = "__template"

  #@description The build mode (default : "regular", "table", "mimic");
  mode : string = "regular"

  #@description The linear mode (default)
  linear : boolean = 1

  #@description The X axis label
  display.xaxis.label : string = "\Upsigma_\text{\tiny 1,2}\text{E}_\text{calibrated}\geq\text{E}_\text{cut}"

  #@description The X axis unit for display (a standard unit, typically SI or CLHEP)
  display.xaxis.unit : string = "keV"

  #@description The Y axis label
  display.yaxis.label : string = "efficiency"

  #@description The number of bins
  number_of_bins : integer = <<get_binning_info(info="bin")>>

  #@description The lower bound of the histogram
  min : real as energy = <<get_binning_info(info="min")>>

  #@description The upper bound of the histogram
  max : real as energy = <<get_binning_info(info="max")>>
#+END_SRC

*** Halflife limit template
#+BEGIN_SRC sh :noweb yes
  [name="halflife_template" type="mygsl::histogram_1d"]
  #@config The histogram template of the halflife limit values

  #@description The group of the histogram (optional)
  group : string = "__template"

  #@description The build mode (default : "regular", "table", "mimic");
  mode : string = "regular"

  #@description The linear mode (default)
  linear : boolean = 1

  #@description The X axis label
  display.xaxis.label : string = "\Upsigma_\text{\tiny 1,2}\text{E}_\text{calibrated}\geq\text{E}_\text{cut}"

  #@description The X axis unit for display (a standard unit, typically SI or CLHEP)
  display.xaxis.unit : string = "keV"

  #@description The Y axis label
  display.yaxis.label : string = "halflife limit"

  #@description The number of bins
  number_of_bins : integer = <<get_binning_info(info="bin")>>

  #@description The lower bound of the histogram
  min : real as energy = <<get_binning_info(info="min")>>

  #@description The upper bound of the histogram
  max : real as energy = <<get_binning_info(info="max")>>
#+END_SRC
